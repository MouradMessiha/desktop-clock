<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="objNotifyIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="objNotifyIcon.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoKCgCMDAwBzAwMAcoKCgCAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAE5NTRmOjo58t7a2wsfHxt7Ew8Lcqqqpunp6emxHR0cSAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAJiYmAYCAf1ze3d3s7Ovr/9XV1P+7urv/vb29/9zb2v/m5eT/wcC/22Rj
        Y0MAAAAAAAAAAAAAAAAAAAAAAAAAAImJiGPu7u380tLR/3Z2d/9PT1H/lZWW/2dnaf9JSkz/g4SF/9zb
        2//V1NPwZGRjQwAAAAAAAAAAAAAAAF9fXyfs7Ov1z8/O/2BgYf9oZ2j/VFRW/1dXWf9PT1H/UFBS/1VV
        V/9hYmT/3dzc/8LCwdtISEgSAAAAAAAAAAC1tbWc8PDw/3p5ev9kY2T/XVxd/1pZWv9XVlj/U1NV/1BQ
        Uv9NTlD/VldZ/4eHiP/p6Of/e3t7bAAAAAAxMTEE6enp6sXExP9ramr/Z2Zm/2JhYv9fXl//XFtc/1ta
        XP+Tk5P/ubm5/1VVV/9QUFL/4N/f/62trLorKysCR0dHGPn5+f6sq6r/hIOC/2tpaf9oZmb/ZGNk/4iH
        iP/W1dX/yMfH/3Bwcf9WVlf/bm5v/8TDw//Ix8fcNDQ0B01NTR37+/v/sK+v/6uqqf9wbm7/bWtr/2po
        aP/Hxsb/rKur/2FgYf9dXV7/YF9h/52cnf/DwsL/zMzL3jQ0NAc7OjoG9vb29cLBwP94dnX/dXNy/3Jw
        cP9vbW3/vr29/5WUlP9mZWX/Y2Ji/2BfYP9dXF3/3dzc/7y7u8ItLS0CAAAAANPT07Xv7u7/iYaF/399
        e/93dXT/dHJx/8TDwv+amZn/a2pq/2hnZ/90c3P/hIOD//Pz8v+SkZF8AAAAAAAAAACJiYlD/f39/sTC
        wv9/fXv/gX59/3p3dv/JyMf/oJ6e/3Jwb/9xb2//cG5u/9ra2v/k5OTsU1NTGQAAAAAAAAAAAAAAAMXF
        xZb+/v7/xcPD/42Kif9/fHr/zs3N/6Wjo/94dnX/iIeG/9jX1//19fX8g4ODXAAAAAAAAAAAAAAAAAAA
        AAA+Pj4ExsbGlv7+/v7w8PD/x8XF/7u6uf+5t7b/zczM//b29v/y8vL1jY2NYy4uLgEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACMjIxD1dXVtfj4+PX+/v7//f39/u3t7eq6urqcZmZmJwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBQUEGVVVVHU9PTxg5OTkEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/D8AAPAPAADABwAAwAMAAIABAACAAQAAAAAAAAAAAAAAAAAAAAAAAIABAACAAQAAwAMAAMAD
        AADwDwAA/D8AAA==
</value>
  </data>
</root>